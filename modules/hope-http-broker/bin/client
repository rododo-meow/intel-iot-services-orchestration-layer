#!/usr/bin/env node
// -*- mode: js -*-

var HTTPBrokerClient = require("../index").HTTPBrokerClient;
var _ = require("lodash");
var repl = require("repl");

function help() {
  console.log("USAGE: client url_of_broker id my_port");
  console.log("          my_port should between 10000 and 20000");
}


if (process.argv.length !== 5) {
  help();
  process.exit(1);
}

var url = process.argv[2];
var id = process.argv[3];
var my_port = parseInt(process.argv[4]);

if (_.isNaN(my_port) || my_port < 10000 || my_port > 20000) {
  help();
  process.exit(1);
}

var client = new HTTPBrokerClient({
  id: id,
  broker_url: url,
  my_port: my_port
});


client.on("message_for_accept", function(data, from) {
  console.log(">> [Message For Accept]", {
    data: data,
    from: from
  });
});

client.on("message_for_subscribe", function(data, from) {
  console.log(">> [Message For Subscribe]", {
    data: data,
    from: from
  });
});

client.on("message_for_subscribe_all", function(data, from) {
  console.log(">> [Message For Subscribe All]", {
    data: data,
    from: from
  });
});


// break down input to number of argc parts, the first argc-1 are break by 
// spaces, and all of the rest form the last arg
function parse_args(argc, input) {
  input = _.trim(input);
  var args = [], i;
  while (input !== "" && argc > 1) {
    i = input.indexOf(" ");
    if (i < 0) {
      args.push(input);
      argc --;
      input = "";
    } else {
      args.push(input.substr(0, i));
      argc --;
      input = _.trim(input.substr(i));
    }
  }
  if (input !== "") {
    args.push(input);
  }
  return args;
}

client.connect$().then(function() {
  console.log("Connected to broker successfully, enter .help to get available commands");
  var server = repl.start({});
  server.defineCommand("help", function() {
    console.log(".help");
    console.log(".exit");
    console.log(".accept topic");
    console.log(".send target_id topic data");
    console.log(".subscribe from_id topic");
    console.log(".subscribe_all topic");
    console.log(".publish topic data");
    this.displayPrompt();
  });

  server.defineCommand("exit", function() {
    client.disconnect$().then(function() {
      process.exit(0);
    }).catch(function(err) {
      console.log("disconnect get error:", err);
      process.exit(1);
    });
  });

  server.defineCommand("accept", function(topic) {
    var self = this;
    client.accept$(topic).then(function() {
      console.log("Successfully");
      self.displayPrompt();
    }).catch(function(err) {
      console.log("Failed due to error:", err);
      self.displayPrompt();
    });
  });

  server.defineCommand("send", function(args) {
    var self = this;
    args = parse_args(3, args);
    if (args.length !== 3) {
      console.log("Need 3 arguments, enter .help for details");
      self.displayPrompt();
      return;
    }
    client.send$(args[0], args[1], args[2]).then(function() {
      console.log("Successfully");
      self.displayPrompt();
    }).catch(function(err) {
      console.log("Failed due to error:", err);
      self.displayPrompt();
    });
  });

  server.defineCommand("subscribe", function(args) {
    var self = this;
    args = parse_args(2, args);
    if (args.length !== 2) {
      console.log("Need 2 arguments, enter .help for details");
      self.displayPrompt();
      return;
    }
    client.subscribe$(args[0], args[1]).then(function() {
      console.log("Successfully");
      self.displayPrompt();
    }).catch(function(err) {
      console.log("Failed due to error:", err);
      self.displayPrompt();
    });
  });

  server.defineCommand("subscribe_all", function(args) {
    var self = this;
    args = parse_args(1, args);
    if (args.length !== 1) {
      console.log("Need 1 arguments, enter .help for details");
      self.displayPrompt();
      return;
    }
    client.subscribe_all$(args[0]).then(function() {
      console.log("Successfully");
      self.displayPrompt();
    }).catch(function(err) {
      console.log("Failed due to error:", err);
      self.displayPrompt();
    });
  });


  server.defineCommand("publish", function(args) {
    var self = this;
    args = parse_args(2, args);
    if (args.length !== 2) {
      console.log("Need 2 arguments, enter .help for details");
      self.displayPrompt();
      return;
    }
    client.publish$(args[0], args[1]).then(function() {
      console.log("Successfully");
      self.displayPrompt();
    }).catch(function(err) {
      console.log("Failed due to error:", err);
      self.displayPrompt();
    });
  });


}).catch(function(err) {
  console.log("Failed to start the client due to error:", err);
  process.exit(1);
})


